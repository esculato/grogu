########################### NETWORKS
networks:
  grogu_ss:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.13.0/24
  socket_proxy:
    name: socket_proxy
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.14.0/24
  t3_proxy:
    name: t3_proxy
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.15.0/24
    external: true

services:

############# CORE

  # Docker Socket Proxy - Security Enchanced Proxy for Docker Socket
  socket-proxy:
    container_name: socket_proxy
    image: linuxserver/socket-proxy:3.2.6-r0-ls57@sha256:7a462f90c5bc04c262e756310fcf564e670fa2ce8496fe8c3cd9945147b80ee3
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    profiles: ["core", "all"]
    networks:
      grogu_ss:
      socket_proxy:
        ipv4_address: 192.168.14.254 # You can specify a static IP
    privileged: true # true for VM. False (default) for unprivileged LXC container.
    # ports:
      #- "2375:2375"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    read_only: true
    tmpfs:
      - /run
    environment:
      - LOG_LEVEL=warning # debug,info,notice,warning,err,crit,alert,emerg
      - ALLOW_START=1 # Portainer
      - ALLOW_STOP=1 # Portainer
      - ALLOW_RESTARTS=1 # Portainer
      ## Granted by Default
      - EVENTS=1
      - PING=1
      - VERSION=1
      ## Revoked by Default
      # Security critical
      - AUTH=0
      - SECRETS=0
      - POST=1 # Watchtower
      # Not always needed
      - BUILD=0 - COMMIT=0 - CONFIGS=0 - CONTAINERS=1 # Traefik, portainer, etc. - DISTRIBUTION=0 
      - EXEC=0 - IMAGES=1 # Portainer - INFO=1 # Portainer - NETWORKS=1 # Portainer - NODES=0 - 
      - PLUGINS=0 - SERVICES=1 # Portainer - SESSION=0 - SWARM=0 - SYSTEM=0 - TASKS=1 # Portainer - 
      - VOLUMES=1 # Portainer - DISABLE_IPV6=0 #optional

  agent:
    container_name: portainer_agent
    image: portainer/agent:2.35.0@sha256:ba05ad0bbd22102f7fadb3168913a0db740ee0f5d042833d35eefb38926305ae
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    profiles: ["core", "all"]
    networks:
      - socket_proxy
      - grogu_ss
    #  - t3_proxy
#    command: -H unix:///var/run/docker.sock # Use Docker Socket Proxy instead for improved security
 #   command: -H tcp://socket-proxy:2375
    ports:
      - "$PORTAINER_AGENT_PORT:9001"     # Agent API
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro # Use Docker Socket Proxy instead for improved security
      - /var/lib/docker/volumes:/var/lib/docker/volumes
      - /:/host

  dozzle-agent:
    container_name: dozzle_agent
    image: amir20/dozzle:v8.14.5@sha256:b9071a733bb53d612cc27e997ec017bf14b0c54e809da2e1a403f7a1aaf83c57
    restart: unless-stopped
    command: agent
    networks:
      - socket_proxy
      - grogu_ss
    #  - t3_proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - $DOZZLE_AGENT_PORT:7007


############# UTILITIES

  syncthing:
    container_name: syncthing
    image: linuxserver/syncthing:2.0.10@sha256:16f13abb71e0cca9cd57524754f53e57c5deaae5e94bbc7974c41732f72557df
    hostname: syncthing-grogu #optional
    restart: unless-stopped
    networks:
      - socket_proxy
      - grogu_ss
    #  - t3_proxy
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - $DOCKERDIR/appdata/syncthing/config:/config
      - /home/medivh/data/sync:/sync
#      - /path/to/data2:/data2
    ports:
      - $SYNCTHING_PORT:8384
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp

  ###### MEDIA FILE MANAGEMENT

  # Calibre   ^`^s Ebooks and Management (Server)
  calibre:
    container_name: calibre
    image: linuxserver/calibre:v8.12.0-ls362@sha256:4edb4c47f36bc8e520dfaa40548fa94fd67e1686ff667271a04a515710d259a4
    restart: unless-stopped
    networks:
      - socket_proxy
      - grogu_ss
    #  - t3_proxy
    ports:
      - $CALIBRE_PORT:8080 # Desktop GUI
     # - $CALIBRE_PORT:8081 # Webserver GUI
    volumes:
      - $DOCKERDIR/appdata/calibre:/config:rw
      - /mnt/media/library:/library:rw
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
#      - GUAC_USER=abc #Gucamole user optional
#      - GUAC_PASS=abc
      # - GUAC_PASS=900150983cd24fb0d6963f7d28e17f72 #Guacamole password optional
#      - UMASK_SET=002 #optional
      # - CLI_ARGS= #optional

#  # Calibre-web Ebooks and Management (Plex of Ebooks)
#  calibre-web:
#    container_name: calibre-web
#    image: linuxserver/calibre-web:0.6.25-ls351@sha256:f3d82c71b8a97c09c182503ac14baa4e547f8dbf6f0a83531d81e779f2f51d64
#    restart: always
#    networks:
#      - t3_proxy
#    ports:
#      - $CALIBRE_WEB_PORT:8083
#    environment:
#      - PUID=$PUID
#      - PGID=$PGID
#      - TZ=$TZ
#      - DOCKER_MODS=ghcr.io/linuxserver/mods:universal-calibre
#     # - DOCKER_MODS=linuxserver/calibre-web:calibre
#    volumes:
#      - $DOCKERDIR/appdata/calibre-web:/config
#      - /home/medivh/data/library/books:/books
#    labels:
#      - "traefik.enable=true"
#    #  ## Kobo
#    #  - "traefik.http.middlewares.kobo-sync-headers.headers.customrequestheaders.X-Scheme=https"
##      - "traefik.http.routers.calibre-web-rtr.middlewares=chain-no-auth@file,kobo-sync-headers" # Google OAuth 2.0

  ## Firefly III
  fireflyiii:
    container_name: fireflyiii
    image: fireflyiii/core:version-6.4.2@sha256:730b9cd720af4f6c67140354bcc571d189281cf46dac3d917d2c238a92244c7d
    restart: unless-stopped
    volumes:
      - $DOCKERDIR/appdata/firefly_iii:/var/www/html/storage/upload
      - /etc/timezone:/etc/timezone:ro
    env_file: .env.firefly
    networks:
      - socket_proxy
      - grogu_ss
    #  - t3_proxy
    ports:
      - $FIREFLY_PORT:8080
    depends_on:
      - mariadb

  ## Firefly III - Importer
  fireflyiii_importer:
    container_name: fireflyiii_importer
    image: fireflyiii/data-importer:version-1.9.0@sha256:6c714c6170b593e00b5eb918e45b36d56032d473a5aa2f8dfc9fa36d0ef29fed
    restart: unless-stopped
    networks:
      - socket_proxy
      - grogu_ss
     # - t3_proxy
    depends_on:
      - fireflyiii
    env_file: .env.firefly.importer
#    volumes:
#      - $DOCKERDIR/appdata/firefly_iii_importer:/import
    ports:
      - $FIREFLY_IMPORTER_PORT:8080
      
  # Calibre-Web-Automated
  calibre-web-automated:
    container_name: calibre-web-automated
    image: ghcr.io/crocodilestick/calibre-web-automated:v3.1.4@sha256:577e846f104fd21453ef306eefb4a95dd95b3b9ddd2463a150944494284da0fd
    restart: unless-stopped
    networks:
      - socket_proxy
      - grogu_ss
    #  - t3_proxy
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      # Hardcover API Key required for Hardcover as a Metadata Provider, get one here: https://docs.hardcover.app/api/getting-started/
      # EXPIRES IN 1 YEAR! 16-10-2025! YA BE WARNED!
      - HARDCOVER_TOKEN=$HARDCOVER_TOKEN
      # If your library is on a network share (e.g., NFS/SMB), disable WAL to reduce locking issues
      # Accepts: true/false (default: false)
      - NETWORK_SHARE_MODE=false
      # Override the default port (8083) for the web server.
      # Accepts any valid port number.
      - CWA_PORT_OVERRIDE=8083
    volumes:
      # CW users migrating should stop their existing CW instance, make a copy of the config folder, and bind that here to carry over all of their user settings ect.
      - $DOCKERDIR/appdata/calibre-web-automated/config:/config 
      # This is an ingest dir, NOT a library one. Anything added here will be automatically added to your library according to the settings you have configured in CWA Settings page. All files placed here are REMOVED AFTER PROCESSING
      - $DATADIR/library/ebooks/ingest:/cwa-book-ingest
      # If you don't have an existing library, CWA will automatically create one at the bind provided here
      - $DATADIR/library/ebooks:/calibre-library
      # If you use calibre plugins, you can bind your plugins folder here to have CWA attempt to add them to its workflow (WIP)
      # If you are starting with a fresh install, you also need to copy customize.py.json to the Calibre config volume above, in /path/to/config/folder/.config/calibre/customize.py.json, see the note below for more info
      - $DOCKERDIR/appdata/calibre/.config/calibre/plugins:/config/.config/calibre/plugins
    ports:
      # Change the first number to change the port you want to access the Web UI, not the second
      - $CALIBRE_WEB_AUTOMATED_PORT:8083
    # If you set CWA_PORT_OVERRIDE to a port below 1024, you may need to uncomment the following line:
    # cap_add:
    #   - NET_BIND_SERVICE
    labels:
      - "traefik.enable=true"

  # Calibre-Web-Automated Book Downloader
  calibre-web-automated-book-downloader:
    container_name: calibre-web-automated-book-downloader
    image: ghcr.io/calibrain/calibre-web-automated-book-downloader:latest
    restart: unless-stopped
    networks:
      - socket_proxy
      - grogu_ss
    #  - t3_proxy
    ports:
      - 8084:8084
    environment:
      - FLASK_PORT=8084
      - LOG_LEVEL='info'
      - BOOK_LANGUAGE='en'
      - USE_BOOK_TITLE=true
      - APP_ENV='prod'
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      # CWA_DB_PATH: /auth/app.db  # Comment out to disable authentication
      # Queue management settings
      - MAX_CONCURRENT_DOWNLOADS=3
      - DOWNLOAD_PROGRESS_UPDATE_INTERVAL=5
    volumes:
      # This is where the books will be downloaded to, usually it would be
      # the same as whatever you gave in "calibre-web-automated"
     # - /tmp/data/calibre-web/ingest:/cwa-book-ingest
      - $DATADIR/library/ebooks/ingest:/cwa-book-ingest
      # This is the location of CWA's app.db, which contains authentication
      # details. Comment out to disable authentication
      #- /cwa/config/path/app.db:/auth/app.db:ro
    labels:
      - "traefik.enable=true"

  # LazyLibrarian
  lazylibrarian:
    container_name: lazylibrarian
    image: lscr.io/linuxserver/lazylibrarian:version-4df10815@sha256:7d504b7be4a43e04cb952e2bf93d4f9fde0b05f357d003acd00a66a1edcd67ac
    restart: unless-stopped
    networks:
      - socket_proxy
      - grogu_ss
     # - t3_proxy
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - $DOCKERDIR/appdata/lazylibrarian:/config
      - $DATADIR:/data #optional
     # - $DATADIR/downloads:/downloads #optional
    ports:
      - 5299:5299
    labels:
      - "traefik.enable=true"

  # Audiobookshelf
  audiobookshelf:
    container_name: audiobookshelf  
    image: ghcr.io/advplyr/audiobookshelf:latest
    restart: unless-stopped
    networks:
      - socket_proxy
      - grogu_ss
    #  - t3_proxy
    ports:
      - 13378:80
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - $DATADIR/library/audiobooks:/audiobooks
      - $DATADIR/library/podcasts:/podcasts
      - $DOCKERDIR/appdata/audiobookshelf:/config
      - $DATADIR/library/metadata:/metadata
    labels:
      - "traefik.enable=true"

  booklore:
    container_name: booklore
    # Official Docker Hub image:
    image: booklore/booklore:latest
    # Or the GHCR image:
    # image: ghcr.io/booklore-app/booklore:latest
    #restart: unless-stopped
    networks:
      - socket_proxy
      - grogu_ss
    #  - t3_proxy
    environment:
    #  - USER_ID=0  # Modify this if the volume's ownership is not root
  #    - GROUP_ID=0 # Modify this if the volume's ownership is not root
 #     - TZ=Etc/UTC
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - DATABASE_URL=jdbc:mariadb://mariadb:3306/booklore   # Only modify this if you're familiar with JDBC and your database setup
      - DATABASE_USERNAME=booklore                          # Must match MYSQL_USER defined in the mariadb container
      - DATABASE_PASSWORD=verysecret           # Use a strong password; must match MYSQL_PASSWORD defined in the mariadb container 
      - BOOKLORE_PORT=6060                                  # Port BookLore listens on inside the container; must match container port below
      - SWAGGER_ENABLED=false                               # Enable or disable Swagger UI (API docs). Set to 'true' to allow access; 'false' to block access (recommended for production).
      - FORCE_DISABLE_OIDC=false                            # Set to 'true' to force-disable OIDC and allow internal login, regardless of UI config
    depends_on:
       - mariadb
        #condition: service_healthy
    ports:
      - "6060:6060" # HostPort:ContainerPort → Keep both numbers the same, and also ensure the container port matches BOOKLORE_PORT, no exceptions. 
      # All three (host port, container port, BOOKLORE_PORT) must be identical for BookLore to function properly.
      # Example: To expose on host port 7070, set BOOKLORE_PORT=7070 and use "7070:7070".
    volumes:
      - $DOCKERDIR/appdata/booklore:/app/data       # Application data (settings, metadata, cache, etc.). Persist this folder to retain your library state across container restarts.
      - $DATADIR/library/ebooks:/books         # Primary book library folder. Mount your collection here so BookLore can access and organize your books.
      - $DATADIR/library/bookdrop:/bookdrop   # BookDrop folder. Files placed here are automatically detected and prepared for import.
    labels:
      - "traefik.enable=true"
    
  ##### DATABASES

  # MariaDB - MySQL Database
  mariadb:
    container_name: mariadb
    image: linuxserver/mariadb:11.4.8@sha256:9482071902026313b72da17eb5d0c73d08315e0b276a77f327adf8950e782635
    restart: unless-stopped 
    networks:
      - socket_proxy
      - grogu_ss
    #  - t3_proxy
    #env_file: .env.firefly.db
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - MYSQL_ROOT_PASSWORD=secret
      - MYSQL_USER=booklore
      - MYSQL_PASSWORD=verysecret
    volumes:
      - $DOCKERDIR/appdata/mariadb/config:/config
    ports:
      - "$MARIADB_PORT:3306"

  # PHPMyAdmin
  phpmyadmin:
    container_name: phpmyadmin
    image: lscr.io/linuxserver/phpmyadmin:latest
  # restart: unless-stopped
    networks:
      - socket_proxy
      - grogu_ss
    #  - t3_proxy
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - PMA_ARBITRARY=1 #optional
      - PMA_ABSOLUTE_URI=https://phpmyadmin.kemeel.com #optional
    volumes:
      - $DOCKERDIR/appdata/phpmyadmin/config:/config
    ports:
      - 80:80
